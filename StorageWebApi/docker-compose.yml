version: "3.8"

networks:
  docker-storage-network:
    driver: bridge

services:
  Storage_db_postgres:
    image: postgres:14.2
    environment:
      POSTGRES_DB: "Warehouse.Storage"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password" # change password for database connection
      PGDATA: /var/lib/postgresql/data/pg_data
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - "5009:5432" # yourSystemPort:containerPort, change yourSystemPort if you need 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Warehouse.Storage"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - docker-storage-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  # dev certificates are used. Use in colsole:
  # dotnet dev-certs https -ep %USERPROFILE%\.aspnet\https\aspnetapp.pfx -p { password here }
  # dotnet dev-certs https --trust 
  # or visit
  # https://learn.microsoft.com/ru-ru/aspnet/core/security/docker-compose-https?view=aspnetcore-6.0
  Storage_web_aspnet:
    image: mcr.microsoft.com/dotnet/core/samples:aspnetapp
    depends_on:
      - Storage_db_postgres
    ports:
      - 8000:80
      - 5001:443
    environment:
      ASPNETCORE_ENVIRONMENT: "Release"
      ASPNETCORE_URLS: https://+:443;http://+:80
      ASPNETCORE_Kestrel__Certificates__Default__Password: password #password from dotnet dev-certs command
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      DB_PgConnection: "Host=Storage_db_postgres;Port=5432;Database=Warehouse.Storage;Username=postgres;Password=password" # copy password for database connect
    volumes:
      - ~/.aspnet/https:/https:ro
    networks:
      - docker-storage-network
    build: 
      context: .
      dockerfile: dockerfile
